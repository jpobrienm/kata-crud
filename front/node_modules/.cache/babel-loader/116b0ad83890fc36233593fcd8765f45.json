{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\Form.js\";\nimport React, { useContext, useRef, useState } from 'react';\nimport { StoreContext } from './StoreContext';\nimport { useForm } from './useForm';\nimport { Store } from \"../App\";\n\nconst Form = props => {\n  const HOST_API = props.HOST_API;\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    className: \"MyForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"MyInput\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"MyButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"A\\xF1adir tarea\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/Form.js"],"names":["React","useContext","useRef","useState","StoreContext","useForm","Store","Form","props","HOST_API","formRef","dispatch","state","todo","item","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","isCompleted"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState} from 'react';\r\nimport { StoreContext } from './StoreContext';\r\nimport { useForm } from './useForm';\r\nimport { Store } from \"../App\";\r\n\r\nconst Form = (props) =>{\r\n    const HOST_API = props.HOST_API\r\n    const formRef = useRef(null);\r\n    const { dispatch, state: { todo } } = useContext(Store);\r\n    const item = todo.item;\r\n    const [state, setState] = useState(item);\r\n\r\n    const onAdd = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const request = {\r\n          name: state.name,\r\n          id: null,\r\n          completed: false\r\n        };\r\n    \r\n    \r\n        fetch(HOST_API + \"/todo\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(request),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(response => response.json())\r\n          .then((todo) => {\r\n            dispatch({ type: \"add-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n          });\r\n    }\r\n\r\n    const onEdit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        const request = {\r\n          name: state.name,\r\n          id: item.id,\r\n          isCompleted: item.isCompleted\r\n        };\r\n    \r\n    \r\n        fetch(HOST_API + \"/todo\", {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(request),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n          .then(response => response.json())\r\n          .then((todo) => {\r\n            dispatch({ type: \"update-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n          });\r\n      }\r\n    \r\n    return(\r\n    <form className=\"MyForm\">\r\n        <input className = \"MyInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"¿Qué piensas hacer hoy?\"\r\n            defaultValue={\"\"}>\r\n        </input>\r\n        <button className = \"MyButton\">Añadir tarea</button>\r\n    </form>);\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}