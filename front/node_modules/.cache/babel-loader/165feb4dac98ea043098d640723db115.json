{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\temp.js\";\nimport React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  todo: {\n    list: [],\n    item: {}\n  }\n};\nconst Store = createContext(initialState);\n\nconst Form = () => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.name,\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Crear\"));\n};\n\nconst List = () => {\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const currentList = todo.list;\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDelete = id => {\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-item\",\n        id\n      });\n    });\n  };\n\n  const onEdit = todo => {\n    dispatch({\n      type: \"edit-item\",\n      item: todo\n    });\n  };\n\n  const onChange = (event, todo) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n    });\n  };\n\n  const decorationDone = {\n    textDecoration: 'line-through'\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Tarea\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"\\xBFCompletado?\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, currentList.map(todo => {\n    return React.createElement(\"tr\", {\n      key: todo.id,\n      style: todo.completed ? decorationDone : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, todo.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, todo.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: todo.completed,\n      onChange: event => onChange(event, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onDelete(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Eliminar\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onEdit(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Editar\")));\n  }))));\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update-item':\n      const todoUpItem = state.todo;\n      const listUpdateEdit = todoUpItem.list.map(item => {\n        if (item.id === action.item.id) {\n          return action.item;\n        }\n\n        return item;\n      });\n      todoUpItem.list = listUpdateEdit;\n      todoUpItem.item = {};\n      return { ...state,\n        todo: todoUpItem\n      };\n\n    case 'delete-item':\n      const todoUpDelete = state.todo;\n      const listUpdate = todoUpDelete.list.filter(item => {\n        return item.id !== action.id;\n      });\n      todoUpDelete.list = listUpdate;\n      return { ...state,\n        todo: todoUpDelete\n      };\n\n    case 'update-list':\n      const todoUpList = state.todo;\n      todoUpList.list = action.list;\n      return { ...state,\n        todo: todoUpList\n      };\n\n    case 'edit-item':\n      const todoUpEdit = state.todo;\n      todoUpEdit.item = action.item;\n      return { ...state,\n        todo: todoUpEdit\n      };\n\n    case 'add-item':\n      const todoUp = state.todo.list;\n      todoUp.push(action.item);\n      return { ...state,\n        todo: {\n          list: todoUp,\n          item: {}\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst StoreProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return React.createElement(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, children);\n};\n\nfunction Temp() {\n  return React.createElement(StoreProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"To-Do List\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }));\n}\n\nexport default temp;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/temp.js"],"names":["React","useContext","useReducer","useEffect","useRef","useState","createContext","HOST_API","initialState","todo","list","item","Store","Form","formRef","dispatch","state","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","isCompleted","target","value","List","currentList","onDelete","onChange","checked","decorationDone","textDecoration","map","reducer","action","todoUpItem","listUpdateEdit","todoUpDelete","listUpdate","filter","todoUpList","todoUpEdit","todoUp","push","StoreProvider","children","Temp","temp"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\r\n\r\nconst HOST_API = \"http://localhost:8080/api\";\r\nconst initialState = {\r\n  todo: { list: [], item: {} }\r\n};\r\nconst Store = createContext(initialState)\r\n\r\n\r\nconst Form = () => {\r\n  const formRef = useRef(null);\r\n  const { dispatch, state: { todo } } = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      completed: false\r\n    };\r\n\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  }\r\n\r\n  const onEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted\r\n    };\r\n\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  }\r\n\r\n  return <form ref={formRef}>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      placeholder=\"¿Qué piensas hacer hoy?\"\r\n      defaultValue={item.name}\r\n      onChange={(event) => {\r\n        setState({ ...state, name: event.target.value })\r\n      }}  ></input>\r\n    {item.id && <button onClick={onEdit}>Actualizar</button>}\r\n    {!item.id && <button onClick={onAdd}>Crear</button>}\r\n  </form>\r\n}\r\n\r\n\r\nconst List = () => {\r\n  const { dispatch, state: { todo } } = useContext(Store);\r\n  const currentList = todo.list;\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/todos\")\r\n      .then(response => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-list\", list })\r\n      })\r\n  }, [dispatch]);\r\n\r\n\r\n  const onDelete = (id) => {\r\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\r\n      method: \"DELETE\"\r\n    }).then((list) => {\r\n      dispatch({ type: \"delete-item\", id })\r\n    })\r\n  };\r\n\r\n  const onEdit = (todo) => {\r\n    dispatch({ type: \"edit-item\", item: todo })\r\n  };\r\n\r\n  const onChange = (event, todo) => {\r\n    const request = {\r\n      name: todo.name,\r\n      id: todo.id,\r\n      completed: event.target.checked\r\n    };\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n      });\r\n  };\r\n\r\n  const decorationDone = {\r\n    textDecoration: 'line-through'\r\n  };\r\n  return <div>\r\n    <table >\r\n      <thead>\r\n        <tr>\r\n          <td>ID</td>\r\n          <td>Tarea</td>\r\n          <td>¿Completado?</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {currentList.map((todo) => {\r\n          return <tr key={todo.id} style={todo.completed ? decorationDone : {}}>\r\n            <td>{todo.id}</td>\r\n            <td>{todo.name}</td>\r\n            <td><input type=\"checkbox\" defaultChecked={todo.completed} onChange={(event) => onChange(event, todo)}></input></td>\r\n            <td><button onClick={() => onDelete(todo.id)}>Eliminar</button></td>\r\n            <td><button onClick={() => onEdit(todo)}>Editar</button></td>\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'update-item':\r\n      const todoUpItem = state.todo;\r\n      const listUpdateEdit = todoUpItem.list.map((item) => {\r\n        if (item.id === action.item.id) {\r\n          return action.item;\r\n        }\r\n        return item;\r\n      });\r\n      todoUpItem.list = listUpdateEdit;\r\n      todoUpItem.item = {};\r\n      return { ...state, todo: todoUpItem }\r\n    case 'delete-item':\r\n      const todoUpDelete = state.todo;\r\n      const listUpdate = todoUpDelete.list.filter((item) => {\r\n        return item.id !== action.id;\r\n      });\r\n      todoUpDelete.list = listUpdate;\r\n      return { ...state, todo: todoUpDelete }\r\n    case 'update-list':\r\n      const todoUpList = state.todo;\r\n      todoUpList.list = action.list;\r\n      return { ...state, todo: todoUpList }\r\n    case 'edit-item':\r\n      const todoUpEdit = state.todo;\r\n      todoUpEdit.item = action.item;\r\n      return { ...state, todo: todoUpEdit }\r\n    case 'add-item':\r\n      const todoUp = state.todo.list;\r\n      todoUp.push(action.item);\r\n      return { ...state, todo: {list: todoUp, item: {}} }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return <Store.Provider value={{ state, dispatch }}>\r\n    {children}\r\n  </Store.Provider>\r\n\r\n}\r\n\r\nfunction Temp() {\r\n  return <StoreProvider>\r\n    <h3>To-Do List</h3>\r\n    <Form />\r\n    <List />\r\n  </StoreProvider>\r\n}\r\n\r\nexport default temp;\r\n"]},"metadata":{},"sourceType":"module"}