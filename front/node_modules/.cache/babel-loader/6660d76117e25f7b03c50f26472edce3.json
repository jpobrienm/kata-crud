{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\Form.js\";\nimport React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\nimport StoreProvider from './StoreProvider';\n\nconst Form = props => {\n  const HOST_API = props.HOST_API;\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(StoreProvider);\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    class: \"MyForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"MyInput\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    class: \"MyButton\",\n    onClick: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"A\\xF1adir tarea\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/Form.js"],"names":["React","useContext","useReducer","useEffect","useRef","useState","createContext","StoreProvider","Form","props","HOST_API","formRef","dispatch","state","todo","setState","item","onAdd","event","preventDefault","request","name","id","completed","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","isCompleted"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\r\nimport StoreProvider from './StoreProvider';\r\n\r\nconst Form = (props) =>{\r\n    const HOST_API = props.HOST_API \r\n    const formRef = useRef(null);\r\n    const {dispatch, state:{todo}} = useContext(StoreProvider);\r\n    const [state, setState] = useState(item);\r\n\r\n    const onAdd = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n        name: state.name,\r\n        id: null,\r\n        completed: false\r\n        };\r\n\r\n\r\n        fetch(HOST_API + \"/todo\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(request),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then((todo) => {\r\n            dispatch({ type: \"add-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n        });\r\n    }\r\n\r\n    const onEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n        name: state.name,\r\n        id: item.id,\r\n        isCompleted: item.isCompleted\r\n        };\r\n\r\n\r\n        fetch(HOST_API + \"/todo\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(request),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then((todo) => {\r\n            dispatch({ type: \"update-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n        });\r\n    }\r\n    \r\n    return(\r\n    <form class=\"MyForm\">\r\n        <input class = \"MyInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"¿Qué piensas hacer hoy?\"\r\n            defaultValue={\"\"}>\r\n        </input>\r\n        <button class = \"MyButton\" onClick=\"\">Añadir tarea</button>\r\n    </form>);\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}