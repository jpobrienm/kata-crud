{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\List.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { StoreContext } from './StoreContext';\n\nconst List = props => {\n  const HOST_API = props.HOST_API;\n  const {\n    setState,\n    state\n  } = useContext(StoreContext);\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [state.list.length, dispatch]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"MyTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"MyTd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"td\", {\n    className: \"MyTodo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Tarea\"), React.createElement(\"td\", {\n    className: \"MyCheck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\xBFCompletado?\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/List.js"],"names":["React","useEffect","useContext","StoreContext","List","props","HOST_API","setState","state","fetch","then","response","json","list","dispatch","type","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBN,UAAU,CAACC,YAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACH,QAAQ,GAAG,QAAZ,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBF,QAAAA;AAAvB,OAAD,CAAR;AACD,KAJH;AAKD,GANM,EAMJ,CAACL,KAAK,CAACK,IAAN,CAAWG,MAAZ,EAAoBF,QAApB,CANI,CAAT;AAQA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAO,IAAA,SAAS,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADI,CAAR;AAaH,CAzBD;;AA2BA,eAAeV,IAAf","sourcesContent":["import React, {useEffect, useContext} from 'react';\r\nimport { StoreContext } from './StoreContext';\r\n\r\nconst List = (props) => {\r\n    const HOST_API = props.HOST_API;\r\n    const {setState, state} = useContext(StoreContext);\r\n\r\n    useEffect(() => {\r\n        fetch(HOST_API + \"/todos\")\r\n          .then(response => response.json())\r\n          .then((list) => {\r\n            dispatch({ type: \"update-list\", list })\r\n          })\r\n      }, [state.list.length, dispatch]);\r\n\r\n    return (<div>\r\n        <table className=\"MyTable\">\r\n          <thead>\r\n            <tr>\r\n              <td className=\"MyTd\">ID</td>\r\n              <td className=\"MyTodo\">Tarea</td>\r\n              <td className=\"MyCheck\">Â¿Completado?</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          </tbody>\r\n        </table>\r\n      </div>);\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}