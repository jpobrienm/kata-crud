{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\Form.js\";\nimport React, { useContext, useRef, useState } from 'react';\nimport StoreProvider from './StoreProvider';\n\nconst Form = props => {\n  const Store = StoreProvider.s;\n  const HOST_API = props.HOST_API;\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(StoreProvider);\n  const item = todo.item;\n  const [state, setState] = useState(todo);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.name,\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Crear\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/Form.js"],"names":["React","useContext","useRef","useState","StoreProvider","Form","props","Store","s","HOST_API","formRef","dispatch","state","todo","item","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","isCompleted","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\r\nimport StoreProvider from './StoreProvider';\r\n\r\nconst Form = (props) =>{\r\n    const Store = StoreProvider.s\r\n    const HOST_API = props.HOST_API \r\n    const formRef = useRef(null);\r\n    const {dispatch, state:{todo}} = useContext(StoreProvider);\r\n    const item = todo.item;\r\n    const [state, setState] = useState(todo);\r\n\r\n    const onAdd = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n        name: state.name,\r\n        id: null,\r\n        completed: false\r\n        };\r\n\r\n\r\n        fetch(HOST_API + \"/todo\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(request),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then((todo) => {\r\n            dispatch({ type: \"add-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n        });\r\n    }\r\n\r\n    const onEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n        name: state.name,\r\n        id: item.id,\r\n        isCompleted: item.isCompleted\r\n        };\r\n\r\n\r\n        fetch(HOST_API + \"/todo\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(request),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then((todo) => {\r\n            dispatch({ type: \"update-item\", item: todo });\r\n            setState({ name: \"\" });\r\n            formRef.current.reset();\r\n        });\r\n    }\r\n    \r\n    return <form ref={formRef}>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      placeholder=\"¿Qué piensas hacer hoy?\"\r\n      defaultValue={item.name}\r\n      onChange={(event) => {\r\n        setState({ ...state, name: event.target.value })\r\n      }}  ></input>\r\n    {item.id && <button onClick={onEdit}>Actualizar</button>}\r\n    {!item.id && <button onClick={onAdd}>Crear</button>}\r\n  </form>\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}