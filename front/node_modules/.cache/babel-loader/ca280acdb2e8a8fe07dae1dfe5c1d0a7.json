{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\components\\\\List.js\";\nimport React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\n\nconst List = () => {\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const currentList = todo.list;\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDelete = id => {\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-item\",\n        id\n      });\n    });\n  };\n\n  const onEdit = todo => {\n    dispatch({\n      type: \"edit-item\",\n      item: todo\n    });\n  };\n\n  const onChange = (event, todo) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n    });\n  };\n\n  const decorationDone = {\n    textDecoration: 'line-through'\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    class: \"MyTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    class: \"MyTd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"td\", {\n    class: \"MyTodo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Tarea\"), React.createElement(\"td\", {\n    class: \"MyCheck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\xBFCompletado?\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/components/List.js"],"names":["React","useContext","useReducer","useEffect","useRef","useState","createContext","List","dispatch","state","todo","Store","currentList","list","fetch","HOST_API","then","response","json","type","onDelete","id","method","onEdit","item","onChange","event","request","name","completed","target","checked","body","JSON","stringify","headers","decorationDone","textDecoration"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\r\n\r\n\r\nconst List = () => {\r\n    const { dispatch, state: { todo } } = useContext(Store);\r\n  const currentList = todo.list;\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/todos\")\r\n      .then(response => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-list\", list })\r\n      })\r\n  }, [dispatch]);\r\n\r\n\r\n  const onDelete = (id) => {\r\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\r\n      method: \"DELETE\"\r\n    }).then((list) => {\r\n      dispatch({ type: \"delete-item\", id })\r\n    })\r\n  };\r\n\r\n  const onEdit = (todo) => {\r\n    dispatch({ type: \"edit-item\", item: todo })\r\n  };\r\n\r\n  const onChange = (event, todo) => {\r\n    const request = {\r\n      name: todo.name,\r\n      id: todo.id,\r\n      completed: event.target.checked\r\n    };\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n      });\r\n  };\r\n\r\n  const decorationDone = {\r\n    textDecoration: 'line-through'\r\n  };\r\n    return (<div>\r\n        <table class=\"MyTable\">\r\n          <thead>\r\n            <tr>\r\n              <td class=\"MyTd\">ID</td>\r\n              <td class=\"MyTodo\">Tarea</td>\r\n              <td class=\"MyCheck\">Â¿Completado?</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          </tbody>\r\n        </table>\r\n      </div>);\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}