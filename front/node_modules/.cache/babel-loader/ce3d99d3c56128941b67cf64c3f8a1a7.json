{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudio-Sofka\\\\Codigos\\\\kata-crud-refactoring-master\\\\front\\\\src\\\\App.js\";\nimport React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\nimport Form from './components/Form.jsx';\nimport List from './components/List';\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  todo: {\n    list: [],\n    item: {}\n  }\n};\nconst Store = createContext(initialState);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update-item':\n      const todoUpItem = state.todo;\n      const listUpdateEdit = todoUpItem.list.map(item => {\n        if (item.id === action.item.id) {\n          return action.item;\n        }\n\n        return item;\n      });\n      todoUpItem.list = listUpdateEdit;\n      todoUpItem.item = {};\n      return { ...state,\n        todo: todoUpItem\n      };\n\n    case 'delete-item':\n      const todoUpDelete = state.todo;\n      const listUpdate = todoUpDelete.list.filter(item => {\n        return item.id !== action.id;\n      });\n      todoUpDelete.list = listUpdate;\n      return { ...state,\n        todo: todoUpDelete\n      };\n\n    case 'update-list':\n      const todoUpList = state.todo;\n      todoUpList.list = action.list;\n      return { ...state,\n        todo: todoUpList\n      };\n\n    case 'edit-item':\n      const todoUpEdit = state.todo;\n      todoUpEdit.item = action.item;\n      return { ...state,\n        todo: todoUpEdit\n      };\n\n    case 'add-item':\n      const todoUp = state.todo.list;\n      todoUp.push(action.item);\n      return { ...state,\n        todo: {\n          list: todoUp,\n          item: {}\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst StoreProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return React.createElement(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, children);\n};\n\nfunction App() {\n  return React.createElement(StoreProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    class: \"MyTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"To-Do List\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Estudio-Sofka/Codigos/kata-crud-refactoring-master/front/src/App.js"],"names":["React","useContext","useReducer","useEffect","useRef","useState","createContext","Form","List","HOST_API","initialState","todo","list","item","Store","reducer","state","action","type","todoUpItem","listUpdateEdit","map","id","todoUpDelete","listUpdate","filter","todoUpList","todoUpEdit","todoUp","push","StoreProvider","children","dispatch","App"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useEffect, useRef, useState, createContext } from 'react';\nimport Form from './components/Form.jsx';\nimport List from './components/List'\n\nconst HOST_API = \"http://localhost:8080/api\";\nconst initialState = {\n  todo: { list: [], item: {} }\n};\nconst Store = createContext(initialState)\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'update-item':\n      const todoUpItem = state.todo;\n      const listUpdateEdit = todoUpItem.list.map((item) => {\n        if (item.id === action.item.id) {\n          return action.item;\n        }\n        return item;\n      });\n      todoUpItem.list = listUpdateEdit;\n      todoUpItem.item = {};\n      return { ...state, todo: todoUpItem }\n    case 'delete-item':\n      const todoUpDelete = state.todo;\n      const listUpdate = todoUpDelete.list.filter((item) => {\n        return item.id !== action.id;\n      });\n      todoUpDelete.list = listUpdate;\n      return { ...state, todo: todoUpDelete }\n    case 'update-list':\n      const todoUpList = state.todo;\n      todoUpList.list = action.list;\n      return { ...state, todo: todoUpList }\n    case 'edit-item':\n      const todoUpEdit = state.todo;\n      todoUpEdit.item = action.item;\n      return { ...state, todo: todoUpEdit }\n    case 'add-item':\n      const todoUp = state.todo.list;\n      todoUp.push(action.item);\n      return { ...state, todo: {list: todoUp, item: {}} }\n    default:\n      return state;\n  }\n}\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return <Store.Provider value={{ state, dispatch }}>\n    {children}\n  </Store.Provider>\n\n}\n\nfunction App() {\n  return <StoreProvider>\n    <h1 class = \"MyTitle\">To-Do List</h1>\n    <Form />\n    <List />\n  </StoreProvider>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}